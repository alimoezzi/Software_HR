image: jsanchezislas/ubuntupython

stages:
  - ver
  - init
  - tests
  - deploy

ver:
  stage: ver
  script:
    - python --version
    - whoami

variables:
  PYTHONPATH: .
  FLASK_APP: server

init:
  stage: init
  script:
    - export DEBIAN_FRONTEND=noninteractive
    - apt-get -yq update && apt-get install -y gnupg2
    - apt-get -yq install libffi6 libffi-dev
    - pip3 install psycopg2-binary
    - pip3 install gunicorn
    - pip3 install -r requirements.txt

run_tests:
  stage: tests
  script:
    - export DEBIAN_FRONTEND=noninteractive
    - apt-get -yq update && apt-get install -y gnupg2
    - apt-get -yq install libffi6 libffi-dev
    - pip3 install psycopg2-binary
    - pip3 install gunicorn
    - pip3 install -r requirements.txt
    - psql -c 'create database software_hr;'
    - export ENV=test
    - flask db upgrade
    - python tests.py

deploy_staging:
  stage: deploy
  script:
    - export ENV=heroku
    - flask db upgrade
    - git remote add heroku https://heroku:$HEROKU_API_KEY@git.heroku.com/software-hr.git
    - git push heroku master
    - echo "Deployed to Staging Server https://software-hr.herokuapp.com/"
  environment:
    name: staging
    url: https://software-hr.herokuapp.com/
  only:
    - master

deploy_production:
  stage: deploy
  script:
    - export ENV=heroku
    - flask db upgrade
    - git remote add heroku https://heroku:$HEROKU_API_KEY@git.heroku.com/software-hr.git
    - git push heroku master
    - echo "Deployed to Production Server https://software-hr.herokuapp.com/"
  environment:
    name: production
    url: https://software-hr.herokuapp.com/
  when: manual
  only:
    - master